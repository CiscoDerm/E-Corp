name: Check MkDocs Documentation

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main

jobs:
  verify-docs:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: üèóÔ∏è Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: üì¶ Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material

      - name: üîé Run MkDocs Build Check
        id: build
        run: |
          echo "üõ†Ô∏è Checking MkDocs build..."
          mkdocs build | tee mkdocs_log.txt || echo "BUILD_FAILED=1" >> $GITHUB_ENV

      - name: üìñ Show MkDocs Logs
        run: |
          if [ -s mkdocs_log.txt ]; then
            cat mkdocs_log.txt
          else
            echo "No logs generated by MkDocs."
          fi

      - name: ‚ùó Detect Warnings
        id: detect_warnings
        run: |

          if [ -s mkdocs_log.txt ] && grep -i "WARNING" mkdocs_log.txt; then
            echo "‚ùå Warnings detected in MkDocs logs!"

            echo "HAS_WARNINGS=1" >> $GITHUB_ENV
          else
            echo "No warnings detected."
          fi

      - name: ‚ö†Ô∏è Check Log Length
        id: log_length
        run: |
          LOG_LINES=$(wc -l < mkdocs_log.txt)
          if [ "$LOG_LINES" -gt 3 ]; then
            echo "‚ùå Too many log lines detected! ($LOG_LINES lines)"
            echo "LOG_LINES_EXCEEDED=1" >> $GITHUB_ENV
          fi

      - name: ‚ùå Fail on Build Error
        if: env.BUILD_FAILED == '1'
        run: |
          echo "‚ùå MkDocs build failed! Check the logs above."
          exit 1

      - name: ‚ùå Fail on Warnings
        if: env.HAS_WARNINGS == '1'
        run: |
          echo "‚ùå Warnings detected in MkDocs logs! Failing the pipeline."
          exit 1

      - name: ‚ùå Fail on Excessive Log Lines
        if: env.LOG_LINES_EXCEEDED == '1'
        run: |
          echo "‚ùå Too many log lines detected! Failing the pipeline."
          exit 1



      - name: ‚úÖ Success Message

        if: env.BUILD_FAILED != '1' && env.LOG_LINES_EXCEEDED != '1' && env.HAS_WARNINGS != '1'

        run: echo "‚úÖ MkDocs build passed!"

      - name: üêõ Debug Information
        run: |
          echo "Current directory: $(pwd)"
          echo "Files in directory:"
          ls -la
          echo "Content of mkdocs_log.txt:"
          cat mkdocs_log.txt || echo "No logs found."